<?php
/**
 * @file
 * Module file for btr_ui.
 */

require_once(dirname(__FILE__) . '/includes/menu.inc');
require_once(dirname(__FILE__) . '/includes/blocks.inc');

/**
 * Implements hook_help().
 */
                               /*
function btr_ui_help($path, $args) {
  switch($path)
    {
      case 'translations/get':
        $help = t('Get translation suggestions for a given string.');
        break;

      case 'translations/vote':
        $help = t('Vote the best translation for a string, or suggest a better translation.');
        break;
    }

  return $help;
}
                               */

/**
 * Implements hook_theme().
 */
function btr_ui_theme($existing, $type, $theme, $path) {
  return array(
    'btr_ui_filter_form_element' => array(
      'render element' => 'element',
    ),
    'btr_ui_translate_translation' => array(
      'render element' => 'element',
    ),
    'btr_ui_translate_actions' => array(
      'render element' => 'element',
    ),
    'btr_ui_in_context' => array(
      'variables' => array('source' => NULL),
    ),
    'btr_ui_translate_radio' => array(
      'render element' => 'element',
    ),
    'btr_ui_translate_source' => array(
      'render element' => 'element',
    ),
    'btr_ui_translate_translation_list' => array(
      'render element' => 'element',
    ),
    'btr_ui_translate_table' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Implements hook_flush_caches().
 * Add cache table names to the list of cache tables
 * that will be cleared by the Clear button on the Performance page
 * or whenever drupal_flush_all_caches is invoked.
 * Returns an array of cache table names.
 */
function btr_ui_flush_caches() {
  return array('cache_btr_ui');
}

/**
 * Implements hook_init().
 */
function btr_ui_init() {
  if (arg(0) == 'translations') {
    drupal_add_css(drupal_get_path('module', 'btr_ui') . '/btr_ui.css');
    // For the translation overview pages. This is used to present admin page like panels.
    drupal_add_css(drupal_get_path('module', 'system') . '/admin.css');
  }

  // Check if language is RTL
  $languages = btr_get_languages();
  $lng = arg(1);
  if (array_key_exists($lng, $languages)) {
    // Add RTL style if the current language's direction is RTL
    if ($languages[$lng]['direction'] == LANGUAGE_RTL) {
      drupal_add_css(drupal_get_path('module', 'btr_ui') . '/btr_ui-rtl.css');
    }
  }

  // Disable breadcrumb.
  drupal_set_breadcrumb(array());
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function btr_ui_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  // remove the field 'field_data_sequential' from the form
  // it is for internal usage only
  $form['field_data_sequential']['#access'] = FALSE;
}
