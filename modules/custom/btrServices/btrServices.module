<?php
/**
 * @file
 * Module file for btrServices.
 */

/**
 * Implements hook_services_resources().
 */
function btrServices_services_resources() {
  $resources['report'] = _btrServices_report();
  $resources['translations'] = _btrServices_translations();
  return $resources;
}

function _btrServices_report() {
  // Getting reports of different kinds.
  $report['operations']['retrieve'] = array(
    'help' => 'Reports of different kinds.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_report_retrieve',
    'args' => array(
      array(
        'name' => 'report',
        'optional' => FALSE,
        'source' => array('path' => 0),
        'description' => 'The name/id of the report.',
        'type' => 'string',
      ),
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'param',
        'description' => 'Parameters of the report.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Getting general statistics (number of votes and
  // translations) for the last week, month and year.
  $report['actions']['statistics'] = array(
    'help' => 'General statistics (number of votes and translations) for the last week, month and year.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_report_statistics',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'The parameters of the report.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Getting statistics about top contributors.
  $report['actions']['topcontrib'] = array(
    'help' => 'Statistics about top contributors.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_report_topcontrib',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'The parameters of the report.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  return $report;
}

function _btrServices_translations() {
  // Return a string, along with its translations,
  // votes and other details.
  $translations['operations']['retrieve'] = array(
    'help' => 'Return a string, along with its translations, votes and other details.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_retrieve',
    'args' => array(
      array(
        'name' => 'sguid',
        'optional' => FALSE,
        'source' => array('path' => 0),
        'description' => 'The string (globally unique) id.',
        'type' => 'string',
      ),
      array(
        'name' => 'lng',
        'optional' => FALSE,
        'source' => array('param' => 'lng'),
        'description' => 'The language of translations.',
        'type' => 'string',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Filter strings and translations
  // according to the given parameters.
  $translations['operations']['index'] = array(
    'help' => 'Index of strings and translations.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_index',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'param',
        'description' => 'Filter parameters (lng, words, project, etc.)',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Search strings and translations using various filters.
  $translations['actions']['search'] = array(
    'help' => 'Search strings and translations.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_search',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Filters (lng, words, project, etc.)',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Get the sguid of a random string according to the target.
  $translations['actions']['get_random_sguid'] = array(
    'help' => 'Get the sguid of a random string according to the target, which can be: next|translated|untranslated.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_get_random_sguid',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Assoc array containing the target.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Get a string, along with its translations, votes and other details.
  $translations['actions']['get'] = array(
    'help' => 'Return a string, along with its translations, votes and other details.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_get',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Parameters (sguid and lng).',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // Add a new translation to a source string.
  $translations['actions']['add'] = array(
    'help' => 'Add a new translation to a source string.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_add',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Translation data (sguid, lng, translation).',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('btranslator-suggest'),
  );

  // Add a vote for a translation.
  $translations['actions']['vote'] = array(
    'help' => 'Add a vote for a translation.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_vote',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Translation to be voted (tguid).',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('btranslator-vote'),
  );

  // Delete a translation.
  $translations['actions']['del'] = array(
    'help' => 'Delete a translation.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_del',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Translation (tguid) to be deleted.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('btranslator-suggest'),
  );

  // Delete a vote from a translation.
  $translations['actions']['del_vote'] = array(
    'help' => 'Delete a vote from a translation.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_del_vote',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Translation (tguid) to be un-voted.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('btranslator-vote'),
  );

  // Submit multiple actions at once.
  $translations['actions']['submit'] = array(
    'help' => 'Submit multiple actions at once.',
    'file' => array('type' => 'inc', 'module' => 'btrServices'),
    'callback' => '_btr_translations_submit',
    'args' => array(
      array(
        'name' => 'params',
        'optional' => FALSE,
        'source' => 'data',
        'description' => 'Array of actions to be executed.',
        'type' => 'array',
      ),
    ),
    'access callback' => 'user_access',
    'access arguments' => array('btranslator-vote'),
  );

  return $translations;
}
