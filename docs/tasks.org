#+TITLE:     Tasks
#+AUTHOR:    Dashamir Hoxha
#+EMAIL:     dashohoxha@gmail.com
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:overview toc:t ltoc:t mouse:#aadddd buttons:0 path:org-info.js

* Implementation Plan
  1. [X] Make *voting* work (without permissions, user setting, admin
     config, etc.)
  2. [X] Install a test/demo site.
  3. [ ] Add *admin config*, *user settings*, *permissions*,
     permission checking, etc.
  4. [ ] Improve the *integration with facebook* (for voting).
  5. [ ] Put it online.
  6. [ ] Improve the *email interface* (for voting).
  7. [ ] Add a *mobile interface* (or theme).
  8. [ ] Build the pages for admin dashboard, reports and stats.
  9. [ ] Add an API for external applications.
  10. [ ] Integration with google+, twitter, diaspora, etc.
  11. [ ] Android app that can be used for voting.

* Tasks

** UI

*** List of *string-->translations*
    + Define and implement suitable access rights.
    + Some of the advanced filtering options should be available
      only if the user has propper access rights.
    + Some editing options should be available only if the user has
      propper access rights.
    + For each suggestion, the admin (or moderators) should be able to apply
      additional actions (for example remove the suggestion).

    + For each l10n string, display also the corresponding translations
      (best suggestions) in auxiliary (helper) languages. For example,
      besides the original l10n string (in English), the French and German
      translations may be displayed as well, if these are selected on
      the display options of the filter.

    + For each suggestion, add a Like (or +1) button. When it is clicked,
      the vote is submitted through an AJAX call. The voted (or liked,
      or +1'd) suggestion should be visibly distinguished from the rest.
    + For each suggestion, display details like: suggested by, suggested
      when, number of votes, some of the latest voters (and all the voters
      when clicked).
    + For each suggestion add a Flag (or -1) button. A suggestion is flagged
      when it is totally irrelevant to the string, or is spam, or is abusive, etc.
      In general, when a suggestion is flagged, it is something that should be
      removed. When flagging a suggestion, a reason/explanation may be given as
      well. When a suggestion is flagged, it has to be reviwed and removed
      by an admin/moderator. The admin may also take some action on the user that
      submitted the offending suggestion (or on the user that submitted the flag,
      if the suggestion is ok).

    + Voting mode can be 'single' or 'multiple', and it can be selected by admin
      (during installation). On mode 'single' at most one vote per string is allowed.
      On mode 'multiple' at most one vote for translation is allowed (user can
      approve more than one translation for the same string).
    + For the 'multiple' mode, an Unlike button should be available as well (in order
      to change the voting at any time).
    + When the votes are changed, the old (removed) votes should be stored on
      an archive table, in order to keep the history of changing votes as well.

** Workflow

*** When a new suggestion is added, notify previous voters to review their votes.

*** The author of a suggestion can withdraw it or change it.
    In both cases the votes are lost (deleted or archived) and the
    voters are notified about the change.


** API

   Build an API/web-service that totally separates the database from
   the interface. Everything should be done through the
   API/web-service.

*** XML-RPC interface
    Or some other web-service (API) interface.

*** Split the module l10n_feedback into server and client
    These two should communicate only through the API/web-service.

** Integration with Facebook
*** For each translation review add a button for posting it on FB as a poll.
*** When a FB user votes or leaves a comment, update his status.


** Misc

*** Start with simple tests (l10n_feedback.test)
*** Send full html pages by email.
*** Improve the look of number of votes.
*** Add in l10n.org.al a page for each project which can be liked, +1-d, etc.

*** Separate the display interface from the database logic with a web-server API.

*** DONE Improve the content of the notification emails.
    Include in the message the string that is to be translated and any
    existing translations. Include in the subject part of the string
    that is to be translated.

*** Send out HTML notification emails.
    Replace one-time-login with one-time-submittion on the
    notification emails

*** DONE Disqus:
    - improve the title of the disqus threads
    - transfer domain l10n_sq to btranslator
    - create also a domain btranslator_dev

*** Install any module for sending email to all the users of l10n.org.al
    Try:
    - simplenews
    - masscontact
*** Invite all the existing users to customize their profile/settings.

*** Install any module for sending invitations to other users.

*** DONE Fix the irc proxy on the server.
    + https://wiki.linaro.org/Resources/HowTo/BIP

*** Try to use on l10n.org.al the theme sky or some other suitable theme.
    Try to configure a responsive layout (which changes automatically
    for different screen sizes).

*** DONE Use a different database for the translation data
    See:
    http://stackoverflow.com/questions/4839063/multiple-concurrent-database-connections-in-drupal-7


*** DONE Import the translation data (PO files) of other languages.
    Import the translation data of Slovenian. Try to import the
    translation data of German and Italian as well.

*** Upgrade the server on rackspace
    From 512MB RAM and 20GB HDD, to 1024MB RAM and 40GB HDD.
    Need to find some funds or sponsors, to support this.

*** Create user dashboards/stats/reports.
    - http://drupal.org/project/homebox
    - http://drupal.org/project/user_dashboard
    - Create custom blocks.

*** Admin dashboards/stats/reports.
    - http://drupal.org/documentation/modules/dashboard

*** DONE Create a twitter account for btranslator and connect it to the github account.

*** Improve the website (homepage) of the project on GitHub.
*** Create a page on Google+ for l10n-sq and btranslator.

*** Try to improve the performance.
*** Enable export again.
*** Apply mod_security on l10n.org.al
*** Generate code documentation by phpDocu and doxygen.
*** Use modules: views, pannels, views_slideshow, invite, etc.
