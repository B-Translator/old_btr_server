#+TITLE:     Tasks
#+AUTHOR:    Dashamir Hoxha
#+EMAIL:     dashohoxha@gmail.com
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:overview toc:t ltoc:t mouse:#aadddd buttons:0 path:org-info.js

* Implementation Plan
  1. [X] Make *voting* work (without permissions, user setting, admin
     config, etc.)
  2. [X] Install a test/demo site.
  3. [ ] Add *admin config*, *user settings*, *permissions*,
     permission checking, etc.
  4. [ ] Improve the *integration with facebook* (for voting).
  5. [ ] Put it online.
  6. [ ] Improve the *email interface* (for voting).
  7. [ ] Add a *mobile interface* (or theme).
  8. [ ] Build the pages for admin dashboard, reports and stats.
  9. [ ] Add an API for external applications.
  10. [ ] Integration with google+, twitter, diaspora, etc.
  11. [ ] Android app that can be used for voting.

* Tasks

** UI

*** List of *string-->translations*
    + Define and implement suitable access rights.
    + Some of the advanced filtering options should be available
      only if the user has propper access rights.
    + Some editing options should be available only if the user has
      propper access rights.
    + For each suggestion, the admin (or moderators) should be able to apply
      additional actions (for example remove the suggestion).

    + For each l10n string, display also the corresponding translations
      (best suggestions) in auxiliary (helper) languages. For example,
      besides the original l10n string (in English), the French and German
      translations may be displayed as well, if these are selected on
      the display options of the filter.

    + For each suggestion, add a Like (or +1) button. When it is clicked,
      the vote is submitted through an AJAX call. The voted (or liked,
      or +1'd) suggestion should be visibly distinguished from the rest.
    + For each suggestion, display details like: suggested by, suggested
      when, number of votes, some of the latest voters (and all the voters
      when clicked).
    + For each suggestion add a Flag (or -1) button. A suggestion is flagged
      when it is totally irrelevant to the string, or is spam, or is abusive, etc.
      In general, when a suggestion is flagged, it is something that should be
      removed. When flagging a suggestion, a reason/explanation may be given as
      well. When a suggestion is flagged, it has to be reviwed and removed
      by an admin/moderator. The admin may also take some action on the user that
      submitted the offending suggestion (or on the user that submitted the flag,
      if the suggestion is ok).

    + Voting mode can be 'single' or 'multiple', and it can be selected by admin
      (during installation). On mode 'single' at most one vote per string is allowed.
      On mode 'multiple' at most one vote for translation is allowed (user can
      approve more than one translation for the same string).
    + For the 'multiple' mode, an Unlike button should be available as well (in order
      to change the voting at any time).
    + When the votes are changed, the old (removed) votes should be stored on
      an archive table, in order to keep the history of changing votes as well.

** Workflow

*** When a new suggestion is added, notify previous voters to review their votes.

*** The author of a suggestion can withdraw it or change it.
    In both cases the votes are lost (deleted or archived) and the
    voters are notified about the change.


** API

*** XML-RPC interface
    Or some other web-service (API) interface.

** Integration with Facebook
*** For each translation review add a button for posting it on FB as a poll.
*** When a FB user votes or leaves a comment, update his status.


** Misc

*** Start with simple tests (l10n_feedback.test)
*** Send full html pages by email.
*** Improve the look of number of votes.
*** Add in l10n-sq.org a page for each project which can be liked, +1-d, etc.
